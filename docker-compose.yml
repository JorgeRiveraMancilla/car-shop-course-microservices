services:
  postgres:
    container_name: auction_db
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    container_name: search_db
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
      - MONGO_INITDB_DATABASE=search
    ports:
      - 27018:27017
    volumes:
      - mongo_data:/var/lib/mongo/data
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 10

  auction-service:
    container_name: auction_service
    image: jiriveramancilla/auction-service:latest
    build:
      context: .
      dockerfile: Src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auction
      - IdentityServiceUrl=http://identity-service
    ports:
      - 7001:80
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  search-service:
    container_name: search_service
    image: jiriveramancilla/search-service:latest
    build:
      context: .
      dockerfile: Src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - AuctionServiceUrl=http://auction-service
    ports:
      - 7002:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      auction-service:
        condition: service_started

  identity-service:
    container_name: identity_service
    image: jiriveramancilla/identity-service:latest
    build:
      context: .
      dockerfile: Src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
    ports:
      - 5001:80
    depends_on:
      postgres:
        condition: service_healthy

  gateway-service:
    container_name: gateway_service
    image: jiriveramancilla/gateway-service:latest
    build:
      context: .
      dockerfile: Src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
    depends_on:
      - auction-service
      - search-service
      - identity-service

volumes:
  postgres_data:
  mongo_data:


networks:
  default:
    name: auction_network
